snippet assert_difference "simple counting"
    assert_difference 'Product.count', 0 do
    end
endsnippet

snippet assert_difference_multiple "simple counting"
    assert_difference 'Product.count' => 1, 'User.count' => 0 do
    end
endsnippet

snippet assert_raises "simple catch"
    assert_raises(StandardError, 'Invalid message #nil') do
endsnippet

snippet stub_logger "dark magic"
    Rails.logger.stub :debug, -> (*args, &block) {
      log = block.call
      return_log = log if log.match? /^return/
    } do
      assert_match /"ok.*? => .*?true/, return_log
    end
endsnippet

snippet test_upload_image ""
class ContentImagesControllerTest < ActionDispatch::IntegrationTest
  include ActionDispatch::TestProcess::FixtureFile

  test "should be able to upload an image" do
    image = fixture_file_upload('test_image.jpg', 'image/jpeg')

    post content_images_url, params: { image: image )

    assert_response :success

    uploaded_image = ContentImage.last

    assert_equal rails_blob_url(uploaded_image. image), JSON.parse(response.body)['file']l'url']
  end
end
endsnippet
