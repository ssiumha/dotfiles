snippet config_database_url "postgres:// or mysql2://"
development:
  url: '<%= ENV.fetch('DATABASE_URL', 'mysql2://root:password@127.0.0.1:3306') %>'
endsnippet

snippet turbo_stream_broadcast ""
# with <%= turbo_stream_from @post, :comments %>
Turbo::StreamsChannel.broadcast_update_to(Post.last, :comments,
  target: 'comments',
  partial: 'post/comments',
  locals: {}
)
endsnippet

snippet devise_timeout "config/initializers/devise.rb"
config.timeout_in = 3.hours
endsnippet

snippet url_helpers ""
Rails.application.routes.url_helpers.root_path
endsnippet

snippet validator_date ""
class DateValidator < ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    begin
      DateTime.parse(value)
    rescue ArgumentError, TypeError
      record.errors.add(attribute, (options[:message] || "Invalid date format'"), value:)
    end
  end
end
endsnippet

snippet reset_pk_sequence "in psql?"
ActiveRecord::Base.connection.tables.each do |t|
  ActiveRecord::Base.connection.reset_pk_sequence!(t)
end
endsnippet

snippet sub_path_component ""
  # https://github.com/rails/rails/blob/v7.1.3.4/actionview/lib/action_view/view_paths.rb#L73-L77
  #
  # class ApplicationController
  #  `<%= render 'icon', name: 'code' %>`
  #
  # scan:
  #  - views/users/components/_icon.html.erb
  #  - views/users/_icon.html.erb
  #  - views/_icon.html.erb
  #
  def self.inherited(subclass)
    super

    subclass.define_singleton_method(:local_prefixes) do
      [File.join(controller_path, 'components'), controller_path, 'components']
    end
  end
endsnippet
