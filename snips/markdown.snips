snippet link "add link name->url"
[${0}](${1})
endsnippet

snippet table "empty table"
|  |  |  |
|--|--|--|
|  |  |  |
|  |  |  |
endsnippet

snippet table_align ""
|L  | C |  R|
|:--|:--:|--:|
|   |   |  |
|   |   |  |
endsnippet

snippet footnote "footnote"
text[^1]

[^1]: footnote message
endsnippet

snippet github_note "NOTE, TIP, IMPORTANT, WARNING, CAUTION"
> [!NOTE]
> Messages..
endsnippet

snippet skeleton_article ""
# 서두
- 무엇에 대한 기사인가
- 읽는 대상은 누구인가
- 목적이 무엇인가

# 결론

# 내용

# 마치며
endsnippet

snippet skeleton_domain ""
== 개요
본 정의서의 목적과 범위에 대한 설명
== 도메인 개요
도메인의 전반적인 소개와 배경
== 핵심 개념 정의
e.g. User, Product, Cart
== 엔티티(모델) 정의
e.g. 속성, 관계, 제약 조건
== 프로세스 정의
도메인 내의 주요 프로세스, 워크플로우
e.g. 주문 프로세스, 결제 프로세스
== 용어 사전
도메인 특화 용어에 대한 설명
== 규칙 및 제약 조건
도메인 내의 규칙과 제약의 정의
== 예외 사항
== 유즈케이스 다이어그램
== 도메인모델 다이어그램
== 부록
e.g. 관련 문서, 용어집, 참고 자료 등
endsnippet

snippet skeleton_ddd "domain driven"
== 도메인 개요
== 핵심 도메인
== 서브 도메인
== 도메인 모델
e.g. 엔터티, 값 객체, 애그리게이트, 도메인 서비스 등 정의
== 유비쿼터스 언어
== 제약 조건
== 유스케이스
== 예외 케이스
== 용어 사전
== Q&A
== 부록
endsnippet

snippet skeleton_report ""
== TL;DR
== Abstract
== Motivation
== Change
== Problem
== Solution
== Expectation
endsnippet

snippet skeleton_research ""
= 서론
== 개요
== 사용 이유
= 주요 구성 요소
== 주요 기능과 구성 요소 설명
= 실제 사용 사례
== 실제 적용 예시
= 장점과 단점
= 비교 분석
= 발전 방향
= 결론
== 분석의 요약
endsnippet

snippet skeleton_dev_doc ""
= 문제
어떤 문제를 마주했는지
= 문제 재현
이 문제가 왜 발생했는지 찾아가는 과정
= 해결 시도
이 문제를 해결하기 위해 했던 시도
= 삽질
그 과정에서 원인을 잘못 파악해 잘못된 접근을 했던 삽질
= 배움
그 과정에서 자기가 모르던 개념을 검색하고 찾아보며 알게 된 내용
endsnippet

snippet skeleton_fault_operation "장애 발생 플로우, 공유"
= 사고발생 상황
= 실사용자 영향
= 중간 과정
= 완료 상황
= 복구 처리
endsnippet

snippet skeleton_feature_architecture "기능 개발시 아키텍처 설계"
# 개요

# 문제사항 정의
- 어떤 문제가 있는가
- 이 작업을 왜 하는가

# 목표
- 결과물
- 성과측정 목표

# 기존 기능, 기존
- AS-IS

# 해결방안
- TO-BE
- 어떻게
- 선택지

# 타임라인
endsnippet

snippet skeleton_feature_simple ""
# 개요
## 배경
## 관련 문서

# TO-BE
# AS-IS
# HOW-TO
endsnippet

snippet skeleton_feature_compare "기능의 비교"
# 비슷한 기능, 패턴화된 기능 케이스 수집
# 기능 리스팅
- 수집한 각각의 장점을 먼저 리스팅
- 현재 사용하는 기능의 단점과 함께 리스팅 정리
endsnippet
