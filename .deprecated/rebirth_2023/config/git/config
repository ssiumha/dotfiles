# vim: filetype=gitconfig
# use (git 1.7.10+)
#
# (deprecated)
# [include]
#     path = ~/dotfiles/gitconfig

[core]
    editor = vim
    pager = delta
    #attributesfile = ~/dotfiles/gitattributes
    #excludesfile = ~/dotfiles/gitignore
    autocrlf = no
    quotepath = no
    precomposeunicode = yes
[log]
    #date = iso8601
    date = format:%y-%m-%d %H:%M
    decorate = auto
[help]
    autocorrect = 1
[color]
    ui = true
[commit]
    # show diff when interactive rebase
    verbose = true
[merge]
    tool = vimdiff
[branch]
    autosetuprebase = always
[push]
    default = simple
[pull]
    rebase = true
[interactive]
    diffFilter = delta --color-only
[delta]
    navigate = true
    line-numbers = true
    diff-highlight = true
    #side-by-side = true
    plus-style = syntax "#003800"
    minus-style = syntax "#3f0001"
[diff]
    tool = vimdiff
    renames = true
    algorithm = histogram
    compactionHeuristic = true
    colorMoved = default
[pretty]
    logfmt = %C(green)%h %C(reset)%ad %C(blue)%an %C(auto)%d %C(reset)%s
    logfmt2 = \t%C(green)%h%C(reset)\t%C(reset)%ad\t%<(16,trunc)%C(blue)%an\t%C(reset)%s\t%C(auto)%d
[alias]
    gr = log --graph --oneline --format=logfmt
    #gra = log --graph --oneline --all --format=logfmt

    # $1:graph / $2:hash / $3:date / $4:name / $5:subject / $6:branch
    gra = "!f() { git log --graph --oneline --all --format=logfmt2 --color $@ \
        | awk -F '\t' '{ printf \"%-6s\\t%s\\t%s %s %s %s\\t%s\\n\", $1, $2, $3, $4, $5, $6, $7 }' \
        | less -S; }; f"
    lg = log --graph --stat --find-renames
    lgp = log --graph --stat --find-renames -p origin/master..

    d = diff
    ds = diff --staged
    dw = diff --color-words
    dws = diff --color-words --staged

    dt = !GIT_EXTERNAL_DIFF=difft GIT_PAGER=bat git diff
    dts = !GIT_EXTERNAL_DIFF=difft  GIT_PAGER=bat git diff --staged

    st = status --short --branch

    a = add
    ap = add --patch
    ae = add --edit

    c = commit
    cv = commit -v
    cva = commit -va

    s = switch
    sf = !git branch | fzf | cut -c2- | xargs -I% git checkout %

    sw = switch
    #swf = !git branch | fzf | cut -c2- | xargs -I% git checkout %

    # 20-99-99 00:00 branch_name hash author subject
    swf = !git branch | cut -c2- | xargs -I{} \
        git log --color=always --oneline \
                --format='%C(green)%ad\t%C(reset)%S\t%C(auto)%h\t%C(blue)%an\t%C(reset)%s' \
                -n1 {} \
        | column -t -s '\t' | sort \
        | fzf +s --tac | awk '{print $3}' | xargs -I% git checkout %
    co = checkout

    br = branch
    fzf-br-rm = !git branch | fzf -m | cut -c2- | xargs -I% git branch -D %

    up-branch = !echo $(git remote | grep up || git remote | grep origin)
    main-branch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
    sync-up = !$HOME/.config/git/alias/sync-up

    p = pull
    pp = pull --prune --ff-only
    pr = pull --autostash --ff-only
    prp = pull --prune --autostash --ff-only
    pu = push
    puu = push -u
    puo = push origin HEAD

    fu  = fetch up
    mff = merge --ff-only

    #echo = !echo testecho
